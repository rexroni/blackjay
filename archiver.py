import os
import shutil
from zipfile import ZipFile
from metadata import *
import json

# here, (push, pull, conflicts) is generated by comparing local and remote metadata
def prep_client_to_server_archive(push, pull, conflicts):
    # now prep the zip archive
    with ZipFile('.blackjay/c2s.zip','w') as z:
        z.writestr('.blackjay/push',json.dumps(push,indent='    '))
        z.writestr('.blackjay/pull',json.dumps(pull,indent='    '))
        z.writestr('.blackjay/conflicts',json.dumps(conflicts,indent='    '))
        for name,meta in push.items():
            if meta['del_flag'] is False:
                z.write(name)

def extract_client_to_server_archive(zipfile,UID):
    # make the temp directory
    tempdir = '.blackjay/c2s'+UID
    os.mkdir(tempdir)
    # extract the zip file
    with ZipFile(zipfile,'r') as z:
        z.extractall(tempdir)
    push = load_metadata(os.path.join(tempdir,'.blackjay/push'))
    pull = load_metadata(os.path.join(tempdir,'.blackjay/pull'))
    conflicts = load_metadata(os.path.join(tempdir,'.blackjay/conflicts'))
    return push, pull, conflicts

# now (push, pull, conflicts) are just those changes accepted by the server
def prep_server_to_client_archive(push, pull, conflicts, UID):
    # make a response directory
    zipname = '.blackjay/s2c'+UID+'.zip'
    # now prep the zip archive
    with ZipFile(zipname,'w') as z:
        z.writestr('.blackjay/push',json.dumps(push,indent='    '))
        z.writestr('.blackjay/pull',json.dumps(pull,indent='    '))
        z.writestr('.blackjay/conflicts',json.dumps(conflicts,indent='    '))
        for name,meta in pull.items():
            if meta['del_flag'] is False:
                z.write(name)
        for name,meta in conflicts.items():
            if meta['del_flag'] is False:
                z.write(name)
    return zipname

def extract_server_to_client_archive():
    # make the resp directory
    tempdir = '.blackjay/s2c'
    if os.path.exists(tempdir): shutil.rmtree(tempdir)
    os.mkdir(tempdir)
    # extract the zip file
    with ZipFile(os.path.join('.blackjay/s2c.zip'),'r') as z:
        z.extractall(tempdir)
    push = load_metadata(os.path.join(tempdir,'.blackjay/push'))
    pull = load_metadata(os.path.join(tempdir,'.blackjay/pull'))
    conflicts = load_metadata(os.path.join(tempdir,'.blackjay/conflicts'))
    return push, pull, conflicts

def cleanup_client_temp_files(UID):
    os.rm('.blackjay/c2s.zip')
    os.rm('.blackjay/s2c.zip')
    shutil.rmtree('.blackjay/s2c')

def cleanup_server_temp_files(UID):
    os.rm('.blackjay/c2s'+UID+'.zip')
    os.rm('.blackjay/s2c'+UID+'.zip')
    shutil.rmtree('.blackjay/s2c'+UID+'')
